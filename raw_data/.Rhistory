# make some data to test things on
distribution <- rnorm(999)
obs_point <- -1.96
# Michael's code that apparently doesn't work
mean <- mean(distribution)
outside <- which(distribution > obs_point | distribution < mean-obs_point)
length(outside)/length(distribution)
# Will's code
# Sort-of fine way (and probably the easiest)
sum(distribution < mean-obs_point) / 999
# Best way
sum(c(obs_point,distribution) < obs_point) / 1000
# Same as the best way, but a bit weirder-looking (but quicker to type?)
rank(c(obs_point,distribution))[1] / 1000
sum(distribution < obs_point) / 1000
# Let's do your second component with the mean part...
sum(distribution < mean(distribution)-obs_point) / 1000
# make some data to test things on
distribution <- rnorm(999, mean=2)
obs_point <- -1.96
# Michael's code that apparently doesn't work
mean <- mean(distribution)
outside <- which(distribution > obs_point | distribution < mean-obs_point)
length(outside)/length(distribution)
# Michael's code that apparently doesn't work
mean <- mean(distribution)
outside <- which(distribution > obs_point | distribution < mean-obs_point)
outside <- length(outside)
inside <- length(distribution)
outside/inside
# Will's code
# Sort-of fine way (and probably the easiest)
sum(distribution < mean-obs_point) / 999
# Best way
sum(c(obs_point,distribution) < obs_point) / 1000
# Same as the best way, but a bit weirder-looking (but quicker to type?)
rank(c(obs_point,distribution))[1] / 1000
sum(distribution < obs_point) / 1000
# Let's do your second component with the mean part...
sum(distribution < mean(distribution)-obs_point) / 1000
library(vegan)
cite(vegan)
?vegan
citation("vegan")
library(pez)
citation("pez")
install.packages("rstantools")
library(rstantools)
?stan_lmer
??stan_lmer
?rstandard.lm
?rstantools
install.packages("rstanarm")
library("rstanarm")
library(pez)
setwd("~/Documents/projects/functional_traits_rhf/raw_data")
seeds <- read.csv("rhf_2019_traits_seeds.csv", as.is=TRUE)
head(seeds)
unique(seeds$Species)
