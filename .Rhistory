source('/Users/elizabeth/Documents/projects/functional_traits_rhf/analysis/stalkless-EGS/rhf_new_scan_just-mean/stalkless_headers.R')
cat("\n*Please* cite Momocs when using this code\nThis is little more than a minor modification of their\n*Excellent* package!\n")
#Load images
images <- list.files('/Users/elizabeth/Documents/projects/functional_traits_rhf/analysis/stalkless-EGS/rhf_new_scan_just-mean/processed_images/')
images <- images[grepl('.jpg', images, fixed=TRUE)]
images <- paste('/Users/elizabeth/Documents/projects/functional_traits_rhf/analysis/stalkless-EGS/rhf_new_scan_just-mean/processed_images/', images, sep='')
images <- import.jpg.stalkless(images)
#(Wastefully and badly) filter out the shoddy images
images <- check.images(images) #Remove those files that can't be loaded
images <- images[sapply(images, nrow) > 100] #Need at least 100 data po
#Fourier analysis
images <- Coo(images)
names(images) #You can match these names up with the statistics in the file 'statistics.txt'
fourier <- eFourier(images)
hcontrib(fourier)
#Outer edge lengths
outer.edge <- sapply(images@coo, function(x) sum(sqrt((x[-1,1]-x[-nrow(x),1])^2 + (x[-1,2]-x[-nrow(x),2])^2)))
mn.a <- with(s.fd.c.m, lm(mean~aspect+elev+slope))
sd.a <- with(s.fd.c.m, lm(sd~aspect+elev+slope))
# Using commparative.comm to put together all trait, phylo, and environmental data from RHF
# Elizabeth Simpson # 2021-03-25 # Uses some code that Will Pearse oringinally gave me.
setwd("~/Documents/projects/") # uncomment to set working directory on computer
###########
# HEADERS #
###########
library(pez)
library(FD)
library(lme4)
#####################################################################################
# Community data
# load in cover data, reformat, remove NAs, remove species essentially there as notes
data <- read.csv("./fractal_sampling_div_rhf/data/rhf_2018_cover.csv", as.is=TRUE)
comm <- with(data, tapply(Cover, list(Plot_id,Species), function(x) mean(x,na.rm=TRUE)))
comm[is.na(comm)] <- 0
comm <- comm[, colSums(comm != 0) > 0]
comm <- comm[,!grepl("^[a-z]+", colnames(comm))]
comm <- comm[,!grepl("\\(|/", colnames(comm))]
comm <- comm[,!grepl("sp\\.", colnames(comm))]
colnames(comm) <- tolower(colnames(comm))
###########################################################
# Phylogeny (Zanne et. al. 2014)
# load tree, reformat sp names, create combined data object
tree <- read.tree("./fractal_sampling_div_rhf/data/Vascular_Plants_rooted.dated.tre")
tree$tip.label <- tolower(gsub("_", " ", tree$tip.label))
tree <- congeneric.merge(tree, colnames(comm), split = " ")
#############################################################################################
# Environmental data - just topographic/terrain variables, because temp. data only at 25 plot
# And I want to maintain information from all 78 plots in the analysis as long as possible
### For example, can look at how functional diversity varies across terrain with all 78 plots.
### l__> Does temperature map onto this?
env <- read.csv("./fractal_sampling_div_rhf/data/clean_rhf_terrain.csv", as.is=TRUE)
env <- env[,2:10]
rownames(env) <- env$plot_id
#######################################################################################################
# Trait data - includes leaf & height info as well as some categorical stuff
# Just analyzing continuous variables for now because I struggled with integrating the categorical ones
traits <- read.csv("./functional_traits_rhf/clean_data/clean_traits_rhf.csv", as.is=TRUE)
rownames(traits) <- tolower(traits$species)
traits <- traits[,c(3:11,14,16:17)]
#setdiff(colnames(comm),rownames(traits))
#setdiff(rownames(traits), colnames(comm))
# ^ have checked and figured out reasons for why all of these are dropped
###################################
# Make comparative community object
c.data <- comparative.comm(tree, comm, traits, env)
########################################
# Calculate functional diversity indicies
funct.div.c.m <- with(c.data, dbFD(data[,c(1:3,7:8)], comm, w.abun=TRUE, stand.FRic=TRUE))
ses.mpd <- .ses.mpd(c.data)
ses.mntd <- .ses.mntd(c.data)
ses.mpd.a <- .ses.mpd(c.data, abundace.weighted=TRUE)
ses.mntd.a <- .ses.mntd(c.data, abundance.weighted = TRUE)
pd <- .pd(c.data)
simps.div <- diversity(c.data$comm, index="simpson")
fdiv.c.m <- as.data.frame(funct.div.c.m$nbsp)
fdiv.c.m <- with(funct.div.c.m, cbind(nbsp, FRic, FEve,FDiv, FDis, CWM, ses.mpd.a$mpd.obs.z, ses.mntd.a$mntd.obs.z, pd[,1], simps.div))
colnames(fdiv.c.m) <- c("nsp","fric","feve","fdiv","fdis","CWM.SLA","CWM.LA", "CWM.LDMC","CWM.maxht", "CWM.mn.ht", "sesmpd","sesmntd", "pd", "simpsdiv")
fdiv.c.m$plot_id <- rownames(fdiv.c.m)
#################################################
# Add in soil environment - texture & temperature
soil.env <- read.csv("./functional_traits_rhf/clean_data/2018-soil-env.csv", as.is=TRUE)
###########################################################################################################
# Make subset of environmental and functional data to analyze changes in functional div. across temperature
# 78 plots of functional and topographic env data
t.fd.c.m <- merge(fdiv.c.m, env, by.x="plot_id", by.y="plot_id")
# 25 plots of functional, topographic, soil texture and temp. data
s.fd.c.m <- merge(t.fd.c.m, soil.env[,2:11], by.x="plot_id", by.y="Plot_id")
# Subset to data to focus on
t.fd.c.m <- t.fd.c.m[,c(2:15,20:23)]
rownames(t.fd.c.m) <- fdiv.c.m$plot_id
s.fd.c.m <- s.fd.c.m[,c(2:15, 20:32)]
rownames(s.fd.c.m) <- soil.env$Plot_id
mn.a <- with(s.fd.c.m, lm(mean~aspect+elev+slope))
sd.a <- with(s.fd.c.m, lm(sd~aspect+elev+slope))
mx.a <- with(s.fd.c.m, lm(max~aspect+elev+slope))
min <- with(s.fd.c.m, lm(min~aspect+elev+slope))
rng.a <- with(s.fd.c.m, lm(range~aspect+elev+slope))
class.a <- with(s.fd.c.m, lm(class~aspect+elev+slope))
head(s.fd.c.m)
sand <- with(s.fd.c.m, lm(SAND~aspect+elev+slope))
clay <_ with(s.fd.c.m, lm(CLAY~aspect+elev+slope))
clay <- with(s.fd.c.m, lm(CLAY~aspect+elev+slope))
silt <- with(s.fd.c.m, lm(SILT~aspect+elev+slope))
summary(mn.a)
sd.a <- with(s.fd.c.m, lm(sd~aspect+elev+slope))
summary(sd.a)
summary(mx.a)
summary(min)
summary(sand)
sand <- with(s.fd.c.m, lm(SAND~elev))
summary(sand)
summary(clay)
clay <- with(s.fd.c.m, lm(CLAY~aspect))
summary(clay)
summary(silt)
silt <- with(s.fd.c.m, lm(SILT~elev))
summary(silt)
# Soil texture calculations
# 2019-09-09 Elizabeth Simpson
###############
### HEADERS ###
###############
# Temperature correction function for hydrometer readings (+0.4 g/L for each degree above 20 C, - 0.4 g/L for each degree below 20 C)
temp.correct <- function(temp, hydro_rdg){
return(hydro_rdg + ((temp-20)*0.4))
}
######################
### Load soil data ###
######################
# set working directory to location on your computer
setwd("~/Documents/projects/")
# load in soil data
soil18<- read.csv("./soil_analysis_rhf/data/rhf_2018_soil_texture.csv", as.is=TRUE)
soil19 <- read.csv("./soil_analysis_rhf/data/rhf_2019_soil_texture.csv", as.is=TRUE)
# remove plots with goof
soil18 <- na.omit(soil18)
soil19 <- na.omit(soil19)
#########################
### Calculate texture ###
#########################
# this function does all the arithmatic
texture <- function(soil, plot_ID, soil_wt, temp_calib, hydro_calib, temp_40, hydro_40, temp_120, hydro_120){
clean_soil <- matrix(nrow=nrow(soil), ncol=4)
colnames(clean_soil) <- c("plot_ID", "SAND", "CLAY", "SILT")
clean_soil[,1] <- as.numeric(plot_ID)
for(i in 1:nrow(soil)){
B <- with(soil, temp.correct(temp_calib[i], hydro_calib[i]))
A_40 <- with(soil, temp.correct(temp_40[i], hydro_40[i]))
A_120 <- with(soil, temp.correct(temp_120[i], hydro_120[i]))
silt_clay <- ((A_40-B)/soil_wt[i])*100
clean_soil[i,2] <- as.numeric(100-silt_clay) #sand
clean_soil[i,3] <- as.numeric(((A_120-B)/soil_wt[i])*100) #clay
clean_soil[i,4] <- as.numeric(100 - (100-silt_clay) - (((A_120-B)/soil_wt[i])*100)) #silt
}
return(clean_soil)
}
text18 <- as.data.frame(with(soil18, texture(soil18, plot_ID, soil_wt, temp_calib, hydro_calib, temp_40, hydro_40, temp_120, hydro_120)))
text19 <- as.data.frame(with(soil19, texture(soil19, plot_ID, soil_wt, temp_calib, hydro_calib, temp_40, hydro_40, temp_120, hydro_120)))
# import terrain data (elevation in meters, aspect in radians, slope in degrees)
terrain <- read.csv("./soil_analysis_rhf/data/rhf_2018_terrain_measured_cleaned.csv", as.is=TRUE)
#subset terrain data by the plots present in soil texture data
terrain <- terrain[terrain$Plot_id %in% rhf_texture$plot_ID,]
# combine texture and terrain data for analysis
data <- merge(rhf_texture, terrain, by.x = "plot_ID", by.y = "Plot_id")
# remove extra rows
data <- data[,-5]
# basic plotting idea
# with(data, plot('soil texture' ~ 'terrain variable'))
# plot textures onto texture triangle
library(soiltexture)
head(data)
rm(list=ls())
# Soil texture calculations
# 2019-09-09 Elizabeth Simpson
###############
### HEADERS ###
###############
# Temperature correction function for hydrometer readings (+0.4 g/L for each degree above 20 C, - 0.4 g/L for each degree below 20 C)
temp.correct <- function(temp, hydro_rdg){
return(hydro_rdg + ((temp-20)*0.4))
}
######################
### Load soil data ###
######################
# set working directory to location on your computer
setwd("~/Documents/projects/")
# load in soil data
soil18<- read.csv("./soil_analysis_rhf/data/rhf_2018_soil_texture.csv", as.is=TRUE)
soil19 <- read.csv("./soil_analysis_rhf/data/rhf_2019_soil_texture.csv", as.is=TRUE)
# remove plots with goof
soil18 <- na.omit(soil18)
soil19 <- na.omit(soil19)
#########################
### Calculate texture ###
#########################
# this function does all the arithmatic
texture <- function(soil, plot_ID, soil_wt, temp_calib, hydro_calib, temp_40, hydro_40, temp_120, hydro_120){
clean_soil <- matrix(nrow=nrow(soil), ncol=4)
colnames(clean_soil) <- c("plot_ID", "SAND", "CLAY", "SILT")
clean_soil[,1] <- as.numeric(plot_ID)
for(i in 1:nrow(soil)){
B <- with(soil, temp.correct(temp_calib[i], hydro_calib[i]))
A_40 <- with(soil, temp.correct(temp_40[i], hydro_40[i]))
A_120 <- with(soil, temp.correct(temp_120[i], hydro_120[i]))
silt_clay <- ((A_40-B)/soil_wt[i])*100
clean_soil[i,2] <- as.numeric(100-silt_clay) #sand
clean_soil[i,3] <- as.numeric(((A_120-B)/soil_wt[i])*100) #clay
clean_soil[i,4] <- as.numeric(100 - (100-silt_clay) - (((A_120-B)/soil_wt[i])*100)) #silt
}
return(clean_soil)
}
text18 <- as.data.frame(with(soil18, texture(soil18, plot_ID, soil_wt, temp_calib, hydro_calib, temp_40, hydro_40, temp_120, hydro_120)))
text19 <- as.data.frame(with(soil19, texture(soil19, plot_ID, soil_wt, temp_calib, hydro_calib, temp_40, hydro_40, temp_120, hydro_120)))
# import terrain data (elevation in meters, aspect in radians, slope in degrees)
terrain <- read.csv("./soil_analysis_rhf/data/rhf_2018_terrain_measured_cleaned.csv", as.is=TRUE)
#subset terrain data by the plots present in soil texture data
terrain <- terrain[terrain$Plot_id %in% rhf_texture$plot_ID,]
# combine texture and terrain data for analysis
data <- merge(rhf_texture, terrain, by.x = "plot_ID", by.y = "Plot_id")
# remove extra rows
data <- data[,-5]
# basic plotting idea
# with(data, plot('soil texture' ~ 'terrain variable'))
# plot textures onto texture triangle
library(soiltexture)
#subset terrain data by the plots present in soil texture data
terrain <- terrain[terrain$Plot_id %in% text18$plot_ID,]
# combine texture and terrain data for analysis
data <- merge(rhf_texture, terrain, by.x = "plot_ID", by.y = "Plot_id")
# combine texture and terrain data for analysis
data <- merge(text18, terrain, by.x = "plot_ID", by.y = "Plot_id")
# remove extra rows
data <- data[,-5]
head(data)
# plot textures onto texture triangle
library(soiltexture)
TT.plot(class.sys = "USDA.TT", tri.data = data, pch=20, cex=0.8, cex.axis=0.8, cex.lab=0.8, col="red", main="")
# Using commparative.comm to put together all trait, phylo, and environmental data from RHF
# Elizabeth Simpson # 2021-03-25 # Uses some code that Will Pearse oringinally gave me.
setwd("~/Documents/projects/") # uncomment to set working directory on computer
###########
# HEADERS #
###########
library(pez)
library(FD)
library(lme4)
#####################################################################################
# Community data
# load in cover data, reformat, remove NAs, remove species essentially there as notes
data <- read.csv("./fractal_sampling_div_rhf/data/rhf_2018_cover.csv", as.is=TRUE)
comm <- with(data, tapply(Cover, list(Plot_id,Species), function(x) mean(x,na.rm=TRUE)))
comm[is.na(comm)] <- 0
comm <- comm[, colSums(comm != 0) > 0]
comm <- comm[,!grepl("^[a-z]+", colnames(comm))]
comm <- comm[,!grepl("\\(|/", colnames(comm))]
comm <- comm[,!grepl("sp\\.", colnames(comm))]
colnames(comm) <- tolower(colnames(comm))
###########################################################
# Phylogeny (Zanne et. al. 2014)
# load tree, reformat sp names, create combined data object
tree <- read.tree("./fractal_sampling_div_rhf/data/Vascular_Plants_rooted.dated.tre")
tree$tip.label <- tolower(gsub("_", " ", tree$tip.label))
tree <- congeneric.merge(tree, colnames(comm), split = " ")
#############################################################################################
# Environmental data - just topographic/terrain variables, because temp. data only at 25 plot
# And I want to maintain information from all 78 plots in the analysis as long as possible
### For example, can look at how functional diversity varies across terrain with all 78 plots.
### l__> Does temperature map onto this?
env <- read.csv("./fractal_sampling_div_rhf/data/clean_rhf_terrain.csv", as.is=TRUE)
env <- env[,2:10]
rownames(env) <- env$plot_id
#######################################################################################################
# Trait data - includes leaf & height info as well as some categorical stuff
# Just analyzing continuous variables for now because I struggled with integrating the categorical ones
traits <- read.csv("./functional_traits_rhf/clean_data/clean_traits_rhf.csv", as.is=TRUE)
rownames(traits) <- tolower(traits$species)
traits <- traits[,c(3:11,14,16:17)]
#setdiff(colnames(comm),rownames(traits))
#setdiff(rownames(traits), colnames(comm))
# ^ have checked and figured out reasons for why all of these are dropped
###################################
# Make comparative community object
c.data <- comparative.comm(tree, comm, traits, env)
########################################
# Calculate functional diversity indicies
funct.div.c.m <- with(c.data, dbFD(data[,c(1:3,7:8)], comm, w.abun=TRUE, stand.FRic=TRUE))
ses.mpd <- .ses.mpd(c.data)
ses.mntd <- .ses.mntd(c.data)
ses.mpd.a <- .ses.mpd(c.data, abundace.weighted=TRUE)
ses.mntd.a <- .ses.mntd(c.data, abundance.weighted = TRUE)
pd <- .pd(c.data)
simps.div <- diversity(c.data$comm, index="simpson")
fdiv.c.m <- as.data.frame(funct.div.c.m$nbsp)
fdiv.c.m <- with(funct.div.c.m, cbind(nbsp, FRic, FEve,FDiv, FDis, CWM, ses.mpd.a$mpd.obs.z, ses.mntd.a$mntd.obs.z, pd[,1], simps.div))
colnames(fdiv.c.m) <- c("nsp","fric","feve","fdiv","fdis","CWM.SLA","CWM.LA", "CWM.LDMC","CWM.maxht", "CWM.mn.ht", "sesmpd","sesmntd", "pd", "simpsdiv")
fdiv.c.m$plot_id <- rownames(fdiv.c.m)
#################################################
# Add in soil environment - texture & temperature
soil.env <- read.csv("./functional_traits_rhf/clean_data/2018-soil-env.csv", as.is=TRUE)
###########################################################################################################
# Make subset of environmental and functional data to analyze changes in functional div. across temperature
# 78 plots of functional and topographic env data
t.fd.c.m <- merge(fdiv.c.m, env, by.x="plot_id", by.y="plot_id")
# 25 plots of functional, topographic, soil texture and temp. data
s.fd.c.m <- merge(t.fd.c.m, soil.env[,2:11], by.x="plot_id", by.y="Plot_id")
# Subset to data to focus on
t.fd.c.m <- t.fd.c.m[,c(2:15,20:23)]
rownames(t.fd.c.m) <- fdiv.c.m$plot_id
s.fd.c.m <- s.fd.c.m[,c(2:15, 20:32)]
rownames(s.fd.c.m) <- soil.env$Plot_id
mn.a <- with(s.fd.c.m, lm(mean~aspect))
sd.a <- with(s.fd.c.m, lm(sd~aspect))
mx.a <- with(s.fd.c.m, lm(max~aspect))
min <- with(s.fd.c.m, lm(min~1))
sand <- with(s.fd.c.m, lm(SAND~elev))
clay <- with(s.fd.c.m, lm(CLAY~1))
silt <- with(s.fd.c.m, lm(SILT~1))
###
# GET THIS ADDED IN SOMEWHERE
TT.plot(class.sys = "USDA.TT", tri.data = s.fd.c.m, pch=20, cex=0.8, cex.axis=0.8, cex.lab=0.8, col="red", main="")
###
# GET THIS ADDED IN SOMEWHERE
TT.plot(class.sys = "USDA.TT", tri.data = t.fd.c.m, pch=20, cex=0.8, cex.axis=0.8, cex.lab=0.8, main="")
jpeg("./functional_traits_rhf/analysis/figures/temp-env-25plots.jpeg", width=7, height=3.5, unit="in",res=300)
par(mfrow=c(1,3))
par(mar=c(4,4,0.5,0.5))
par(oma=c(0.2,0.3,0.5,0.5))
with(s.fd.c.m, plot(mean~aspect, pch=19, xlab="Aspect (S = -1, N = 1)", ylab=expression(paste('Temperature (',degree~'C)')), cex=1.2, axes=FALSE, ylim=c(-10,70), col="#E69F00", cex.lab=0.8))
abline(mn.a, lwd=3, col="#E69F00")
with(s.fd.c.m, points(max~aspect, pch=19, cex=1.2, col="#D55E00"))
abline(mx.a, lwd=3, col="#D55E00")
with(s.fd.c.m, points(min~aspect, pch=19, cex=1.2, col="#56B4E9"))
abline(min, lwd=3, col="#56B4E9")
axis(1, cex.axis=0.8)
axis(2, at=c(-10,10,30,50,70), cex.axis=0.8)
legend("topright", c(expression(~ R^2 ~ "= 0.35, p-value = 0.002"), expression(~ R^2 ~ "= 0.68, p-value < 0.001")),
text.col=c("#D55E00", "#E69F00"), box.lty=0, inset=0.04, cex=0.7, bg="transparent")
mtext("(a)",side=3,line=-.5, adj=0.05)
with(s.fd.c.m, plot(sd~aspect, pch=19, xlab="Aspect (S = -1, N = 1)", ylab=expression(paste('SD - Temperature (',degree~'C)')), cex=1.2, axes=FALSE, col="#E69F00", ylim=c(5,15), cex.lab=0.8))
abline(sd.a, lwd=3, col="#E69F00")
axis(1, cex.axis=0.8)
axis(2, at=c(5,10,15), cex.axis=0.8)
mtext("(b)",side=3,line=-.5, adj=0.05)
legend(-1,7.4, legend=c('Min', 'Mean', 'Max'), pch=16, pt.cex=1.2, cex=0.7,
col = c('#56B4E9', '#E69F00', '#D55E00'))
legend("topright", c(expression(~ R^2 ~ "= 0.44, p-value < 0.001")),
text.col=c("#E69F00"), box.lty=0, inset=0.04, cex=0.7, bg="transparent")
TT.plot(class.sys = "USDA.TT", tri.data = s.fd.c.m, pch=20, cex=0.8, cex.axis=0.8, cex.lab=0.8, col="red", main="")
mtext("(c)",side=3,line=-.5, adj=0.05)
dev.off()
jpeg("./functional_traits_rhf/analysis/figures/temp-env-25plots.jpeg", width=7, height=3.5, unit="in",res=300)
par(mfrow=c(1,2))
par(mar=c(4,4,0.5,0.5))
par(oma=c(0.2,0.3,0.5,0.5))
with(s.fd.c.m, plot(mean~aspect, pch=19, xlab="Aspect (S = -1, N = 1)", ylab=expression(paste('Temperature (',degree~'C)')), cex=1.2, axes=FALSE, ylim=c(-10,70), col="#E69F00", cex.lab=0.8))
abline(mn.a, lwd=3, col="#E69F00")
with(s.fd.c.m, points(max~aspect, pch=19, cex=1.2, col="#D55E00"))
abline(mx.a, lwd=3, col="#D55E00")
with(s.fd.c.m, points(min~aspect, pch=19, cex=1.2, col="#56B4E9"))
abline(min, lwd=3, col="#56B4E9")
axis(1, cex.axis=0.8)
axis(2, at=c(-10,10,30,50,70), cex.axis=0.8)
legend("topright", c(expression(~ R^2 ~ "= 0.35, p-value = 0.002"), expression(~ R^2 ~ "= 0.68, p-value < 0.001")),
text.col=c("#D55E00", "#E69F00"), box.lty=0, inset=0.04, cex=0.7, bg="transparent")
mtext("(a)",side=3,line=-.5, adj=0.05)
with(s.fd.c.m, plot(sd~aspect, pch=19, xlab="Aspect (S = -1, N = 1)", ylab=expression(paste('SD - Temperature (',degree~'C)')), cex=1.2, axes=FALSE, col="#E69F00", ylim=c(5,15), cex.lab=0.8))
abline(sd.a, lwd=3, col="#E69F00")
axis(1, cex.axis=0.8)
axis(2, at=c(5,10,15), cex.axis=0.8)
mtext("(b)",side=3,line=-.5, adj=0.05)
legend(-1,7.4, legend=c('Min', 'Mean', 'Max'), pch=16, pt.cex=1.2, cex=0.7,
col = c('#56B4E9', '#E69F00', '#D55E00'))
legend("topright", c(expression(~ R^2 ~ "= 0.44, p-value < 0.001")),
text.col=c("#E69F00"), box.lty=0, inset=0.04, cex=0.7, bg="transparent")
dev.off()
### Cleaning Right Hand Fork soil temperature data
# Michael Stemkovski
# modified to analyze for RHF by Elizabeth Simpson
setwd("~/Documents/projects/functional_traits_rhf")
library(lubridate)
library(readxl)
library(weathermetrics)
csvs <- list.files("raw_data/17-18_temp/")[which(grepl("csv",list.files("raw_data/17-18_temp")))]
all_data <- data.frame(datetime = rep(NA,10000*27),
temp = rep(NA,10000*27),
plot = rep(NA,10000*27))
top <- 1
for(i in csvs){
file <- read.csv(paste("raw_data/17-18_temp/",i,sep=""), header=F, as.is=TRUE)[,c(2,3)]
colnames(file) <- c("datetime", "temp")
file <- file[-c(1,2),]
file[,1] <- file[,1]
file[,2] <- as.numeric(file[,2])
file[,3] <- as.integer(substr(i,1,4))
bottom <- top + nrow(file) - 1
all_data[top:bottom,] <- file
top <- bottom + 1
}
head(all_data)
all_data <- all_data[-which(is.na(all_data$datetime)),]
all_data[,1] <- mdy_hms(all_data[,1], tz = "America/Denver") # if this throws an error, reinstall lubridate
format.times <- function(x){
#x <- all_data[4,1]
hour <- as.character(hour(x))
minute <- as.character(minute(x))
if(nchar(hour) == 1) hour <- paste(0,hour,sep="")
if(nchar(minute) == 1) minute <- paste(0,minute,sep="")
return(paste(hour,minute,sep=":"))
}
formatted_data <- data.frame(plot = all_data[,3],
year = year(all_data[,1]),
month = month(all_data[,1]),
day = day(all_data[,1]),
time = sapply(all_data[,1], format.times),
temp = fahrenheit.to.celsius(all_data[,2]))
formatted_data <- na.omit(formatted_data) #removes 63 rows
head(formatted_data)
head(all_data)
head(csvs[,1])
head(csvs[,,1])
csvs <- list.files("raw_data/17-18_temp/")[which(grepl("csv",list.files("raw_data/17-18_temp")))]
str(csvs)
all_data <- data.frame(datetime = rep(NA,10000*27),
temp = rep(NA,10000*27),
plot = rep(NA,10000*27))
test <- read.csv("raw_data/17-18_temp/", as.is=TRUE)
test <- read.csv("raw_data/17-18_temp/1111-2018-09-12.csv", as.is=TRUE)
test <- read.csv("raw_data/17-18_temp/1111-2018-09-12.csv", as.is=TRUE)[,c(2,3)]
head(all_data)
for(i in csvs){
file <- read.csv(paste("raw_data/17-18_temp/",i,sep=""), header=F, as.is=TRUE)[,c(2,3)]
colnames(file) <- c("datetime", "temp")
file <- file[-c(1,2),]
file[,1] <- file[,1]
file[,2] <- as.numeric(file[,2])
file[,3] <- as.integer(substr(i,1,4))
bottom <- top + nrow(file) - 1
all_data[top:bottom,] <- file
top <- bottom + 1
}
head(all_data)
rm(list=ls())
### Cleaning Right Hand Fork soil temperature data
# Michael Stemkovski
# modified to analyze for RHF by Elizabeth Simpson
setwd("~/Documents/projects/functional_traits_rhf")
library(lubridate)
library(readxl)
library(weathermetrics)
csvs <- list.files("raw_data/17-18_temp/")[which(grepl("csv",list.files("raw_data/17-18_temp")))]
all_data <- data.frame(datetime = rep(NA,10000*27),
temp = rep(NA,10000*27),
plot = rep(NA,10000*27))
top <- 1
for(i in csvs){
file <- read.csv(paste("raw_data/17-18_temp/",i,sep=""), header=F, as.is=TRUE)[,c(2,3)]
colnames(file) <- c("datetime", "temp")
file <- file[-c(1,2),]
file[,1] <- file[,1]
file[,2] <- as.numeric(file[,2])
file[,3] <- as.integer(substr(i,1,4))
bottom <- top + nrow(file) - 1
all_data[top:bottom,] <- file
top <- bottom + 1
}
all_data <- all_data[-which(is.na(all_data$datetime)),]
head(all_data)
?mdy_hms
rm(list=ls())
### Cleaning Right Hand Fork soil temperature data
# Michael Stemkovski
# modified to analyze for RHF by Elizabeth Simpson
setwd("~/Documents/projects/functional_traits_rhf")
library(lubridate)
library(readxl)
library(weathermetrics)
csvs <- list.files("raw_data/17-18_temp/")[which(grepl("csv",list.files("raw_data/17-18_temp")))]
all_data <- data.frame(datetime = rep(NA,10000*27),
temp = rep(NA,10000*27),
plot = rep(NA,10000*27))
top <- 1
for(i in csvs){
file <- read.csv(paste("raw_data/17-18_temp/",i,sep=""), header=F, as.is=TRUE)[,c(2,3)]
colnames(file) <- c("datetime", "temp")
file <- file[-c(1,2),]
file[,1] <- file[,1]
file[,2] <- as.numeric(file[,2])
file[,3] <- as.integer(substr(i,1,4))
bottom <- top + nrow(file) - 1
all_data[top:bottom,] <- file
top <- bottom + 1
}
all_data <- all_data[-which(is.na(all_data$datetime)),]
head(all_data)
all_data[,1] <- mdy_hms(all_data[,1], tz = "America/Denver") # if this throws an error, reinstall lubridate
head(all_data)
citation("lubridate")
format.times <- function(x){
#x <- all_data[4,1]
hour <- as.character(hour(x))
minute <- as.character(minute(x))
if(nchar(hour) == 1) hour <- paste(0,hour,sep="")
if(nchar(minute) == 1) minute <- paste(0,minute,sep="")
return(paste(hour,minute,sep=":"))
}
formatted_data <- data.frame(plot = all_data[,3],
year = year(all_data[,1]),
month = month(all_data[,1]),
day = day(all_data[,1]),
time = sapply(all_data[,1], format.times),
temp = fahrenheit.to.celsius(all_data[,2]))
head(formatted_data)
